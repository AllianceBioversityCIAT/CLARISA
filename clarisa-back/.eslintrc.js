module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir : __dirname, 
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/strict-type-checked',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    // mark empty classes as error, but allow them if they have decorators
    '@typescript-eslint/no-extraneous-class': ['error', { allowWithDecorator: true }],
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/explicit-function-return-type': 'warn',
    '@typescript-eslint/explicit-module-boundary-types': 'warn',
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/ban-types': 'error',
    '@typescript-eslint/ban-types': 'error',
    'no-duplicate-imports': 'error',
    '@typescript-eslint/prefer-destructuring': 'warn',
    '@typescript-eslint/array-type': 'warn',
    '@typescript-eslint/no-for-in-array': 'warn',
    '@typescript-eslint/prefer-readonly-parameter-types': 'warn',
    'logical-assignment-operators': 'warn',
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-shadow": "error",
    "no-param-reassign": "error",
    "@typescript-eslint/no-magic-numbers": "warn",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "prefer-promise-reject-errors": "off",
    "@typescript-eslint/prefer-promise-reject-errors": "warn",
    'no-nested-ternary': 'error',
    'prefer-template': 'warn',
    'prefer-object-spread': 'warn',
    'prefer-template': 'warn',
    'no-var': 'error',
    'eqeqeq': 'error',
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    // mark empty blocks (if, loops, try..catch) as error
    'no-empty': 'error',
    'no-console': 'error',
    'complexity': ['error', 15],
  },
};
